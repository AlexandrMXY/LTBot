version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: scrapper
    ports:
      - "5430:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d scrapper" ]
      interval: 10s
      timeout: 5s
      retries: 5

  liquibase-migrations:
    container_name: migrations
    image: liquibase/liquibase:4.29
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - --searchPath=/migrations
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgres:5432/scrapper
      - --username=${PG_USERNAME}
      - --password=${PG_PASSWORD}
      - --logLevel=debug
      - update
    volumes:
      - ../migrations:/migrations

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181


  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka-1
    ports:
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,DOCKER://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_IN_SYNC_REPLICAS: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kui/config.yml:/etc/kafkaui/config.yaml
      - ./kui/config.yml:/etc/kafkaui/dynamic_config.yaml
volumes:
  db-data:

